{"version":3,"file":"static/js/593.c062a0d6.chunk.js","mappings":"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","sources":["components/PageHeaders/HeaderButton.tsx","components/PageTitleWrapper/index.tsx","pages/teachers/Classroom.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// icons\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\ntype HeaderProps = {\r\n  title: string,\r\n  subtitle: string,\r\n  buttonText: string,\r\n  buttonClick: () => void;\r\n  back?: boolean;\r\n}\r\n\r\nfunction PageHeader({ buttonText, title, subtitle, back, buttonClick }: HeaderProps) {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Stack direction=\"row\" spacing={1}>\r\n          {back && (\r\n            <IconButton onClick={() => navigate(-1)}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          )}\r\n          <Stack direction=\"column\">\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {subtitle}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n          onClick={buttonClick}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n// Components\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Container from \"@mui/material/Container\";\r\nimport PageTitleWrapper from \"../../components/PageTitleWrapper\";\r\nimport PageHeader from \"../../components/PageHeaders/HeaderButton\";\r\n// Utils\r\nimport { Assignment, ClassAssignment, Classroom } from \"../../util/base\";\r\nimport { getClassroomData } from \"../../util/GetRequests\";\r\nimport { createNewAssignment, deleteAssignmentData, editAssignmentData } from \"../../util/PostRequests\";\r\nimport { useAuth } from \"../../hocs/AuthProvider\";\r\n\r\nconst LoadingOverlay = React.lazy(() => import(\"../../components/SuspenseLoader/LoadingOverlay\"));\r\nconst AssignmentList = React.lazy(() => import(\"../../components/classroom/AssignmentList\"));\r\nconst FileStorageList = React.lazy(() => import(\"../../components/tables/FilesSubmitted\"));\r\nconst CreateAssignmentDialog = React.lazy(() => import(\"../../components/dialogs/CreateAssignment\"));\r\nconst SuccessSnackbar = React.lazy(() => import(\"../../components/snackbars/SuccessSnackbar\"));\r\n\r\nfunction ClassroomPage() {\r\n  const { classCode } = useParams();\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [classDetails, setClassDetails] = useState<Classroom>();\r\n  const [seletced, setSelected] = useState<ClassAssignment>();\r\n  const [editAssignment, setEditAssignment] = useState<ClassAssignment>();\r\n  const [createAssign, setCreateAssign] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string | null>(null);\r\n  const studentListSection = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) navigate(\"/\");\r\n    else if (!user.teacher) navigate(\"/student/app\");\r\n  }, [user, navigate])\r\n\r\n  useEffect(() => {\r\n    if (classCode) {\r\n      getClassroomData(classCode).then(data => {\r\n        setClassDetails(data);\r\n        setSelected(data.assignments[0]);\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }, [classCode]);\r\n\r\n  const handleSelectAssign = (assign: ClassAssignment) => {\r\n    setSelected(assign);\r\n    if (studentListSection.current) window.scrollTo({\r\n      top: studentListSection.current.offsetTop,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  const handleEditAssign = (assign: ClassAssignment) => setEditAssignment(assign);\r\n  const handleDeleteAssign = (assignId: number) => {\r\n    if (classCode) {\r\n      deleteAssignmentData(assignId, classCode).then(data => {\r\n        setClassDetails(data);\r\n        setMessage(\"Successfully deleted assignment\");\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  const handleCreateAssignment = (assignment: Assignment) => {\r\n    if (classDetails) {\r\n      setCreateAssign(false);\r\n      createNewAssignment(assignment, classDetails.classroomId, classDetails.classroomCode).then(data => {\r\n        setClassDetails(data);\r\n        setSelected(data.assignments.find(a => a.assignTitle === assignment.assignTitle));\r\n        setMessage(\"Successfully added \" + assignment.assignTitle);\r\n      }).catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n  const saveAssignmentChanges = (assignment: Assignment) => {\r\n    if (classDetails && editAssignment) {\r\n      assignment.assignmentId = editAssignment.assignmentId;\r\n      setEditAssignment(undefined);\r\n\r\n      editAssignmentData(assignment, classDetails.classroomId, classDetails.classroomCode).then(data => {\r\n        setClassDetails(data);\r\n        setSelected(data.assignments.find(a => a.assignTitle === assignment.assignTitle));\r\n        setMessage(\"Successfully updated \" + assignment.assignTitle);\r\n      }).catch(err => console.log(err));\r\n    }\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <Helmet><title>{classDetails ? classDetails.classroomName : \"Class Dashboard\"}</title></Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader \r\n            title={classDetails ? classDetails.classroomName : \"Class Dashboard\"}\r\n            subtitle=\"View and manage your classroom's tasks.\" \r\n            buttonText=\"Add Assignment\" \r\n            buttonClick={() => setCreateAssign(true)}\r\n            back\r\n        />\r\n      </PageTitleWrapper>\r\n      <Container>\r\n        {classDetails ? (\r\n           <>\r\n            <AssignmentList \r\n              assignments={classDetails.assignments}\r\n              selected={seletced && seletced.assignmentId}\r\n              selectAssign={handleSelectAssign}\r\n              editAssign={handleEditAssign}\r\n              deleteAssign={handleDeleteAssign}\r\n              classCode={classCode as string}\r\n            />\r\n            <div ref={studentListSection} />\r\n            {classDetails.assignments.length > 0 && (\r\n              <FileStorageList \r\n                assignmentTitle={seletced ? seletced.assignTitle : classDetails.assignments[0].assignTitle} \r\n                submittedFiles={seletced ? seletced.submittedFiles : classDetails.assignments[0].submittedFiles} \r\n                classCode={classDetails.classroomCode}\r\n                assignId={seletced ? seletced.assignmentId : classDetails.assignments[0].assignmentId}\r\n              />\r\n            )}\r\n           </>\r\n        ) : (\r\n          <LoadingOverlay open={classDetails === undefined} />\r\n        )}\r\n      </Container>\r\n\r\n      <CreateAssignmentDialog \r\n        open={createAssign}\r\n        handleClose={() => setCreateAssign(false)}\r\n        saveAssignment={handleCreateAssignment}\r\n      />\r\n\r\n      <CreateAssignmentDialog \r\n        open={editAssignment !== undefined}\r\n        assignment={editAssignment}\r\n        handleClose={() => setEditAssignment(undefined)}\r\n        saveAssignment={saveAssignmentChanges}\r\n      />\r\n\r\n      <SuccessSnackbar \r\n        open={message !== null} \r\n        message={message as string} \r\n        handleClose={() => setMessage(null)} \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ClassroomPage","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;"],"names":["buttonText","title","subtitle","back","buttonClick","navigate","useNavigate","container","justifyContent","alignItems","item","direction","spacing","onClick","variant","component","gutterBottom","sx","mt","xs","md","startIcon","fontSize","PageTitle","styled","Box","theme","children","className","maxWidth","LoadingOverlay","React","AssignmentList","FileStorageList","CreateAssignmentDialog","SuccessSnackbar","classCode","useParams","user","useAuth","useState","classDetails","setClassDetails","seletced","setSelected","editAssignment","setEditAssignment","createAssign","setCreateAssign","message","setMessage","studentListSection","useRef","useEffect","teacher","getClassroomData","then","data","assignments","catch","err","console","log","classroomName","selected","assignmentId","selectAssign","assign","current","window","scrollTo","top","offsetTop","behavior","editAssign","deleteAssign","assignId","deleteAssignmentData","ref","length","assignmentTitle","assignTitle","submittedFiles","classroomCode","open","undefined","handleClose","saveAssignment","assignment","createNewAssignment","classroomId","find","a","editAssignmentData","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}