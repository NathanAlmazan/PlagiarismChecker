{"version":3,"file":"static/js/908.941f8207.chunk.js","mappings":"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","sources":["components/Label/index.tsx","components/tables/FilesSubmitted/BulkActions.tsx","components/tables/FilesSubmitted/index.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { capitalCase } from \"change-case\";\n\ninterface LabelProps {\n  className?: string;\n  color?:\n    | 'primary'\n    | 'black'\n    | 'secondary'\n    | 'error'\n    | 'warning'\n    | 'success'\n    | 'info';\n  children?: ReactNode;\n  text: string;\n}\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n\n        &-black {\n          background-color: ${theme.colors.alpha.black[100]};\n          color: ${theme.colors.alpha.white[100]};\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label: FC<LabelProps> = ({\n  className,\n  color = 'secondary',\n  children,\n  text\n}) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color}>\n      {capitalCase(text)}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'black',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Bulk actions:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Delete\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary=\"Bulk delete selected\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bulk edit selected\" />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { useState, useEffect, ChangeEvent } from \"react\";\r\nimport {\r\n    Tooltip,\r\n    Divider,\r\n    Box,\r\n    Stack,\r\n    FormControl,\r\n    InputLabel,\r\n    Card,\r\n    Checkbox,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableContainer,\r\n    MenuItem,\r\n    Typography,\r\n    CardHeader,\r\n    Button\r\n  } from '@mui/material';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Label from '../../Label';\r\nimport InsertPageBreakTwoToneIcon from '@mui/icons-material/InsertPageBreakTwoTone';\r\nimport DownloadTwoToneIcon from '@mui/icons-material/DownloadTwoTone';\r\nimport BulkActions from './BulkActions';\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { FileStorage } from \"../../../util/base\";\r\n\r\n  type Filters = \"passed\" | \"marginal\" | \"plagiarized\" | \"all\" | \"unchecked\";\r\n\r\n  const getStatusLabel = (score: number): JSX.Element => {\r\n    const map = [\r\n      {\r\n        text: 'plagiarized',\r\n        color: 'error'\r\n      },\r\n      {\r\n        text: 'passed',\r\n        color: 'success'\r\n      },\r\n      {\r\n        text: 'marginal',\r\n        color: 'warning'\r\n      },\r\n      {\r\n        text: 'unchecked',\r\n        color: 'primary'\r\n      }\r\n    ];\r\n\r\n    let stats = \"passed\";\r\n\r\n    if (score === 0) stats = \"unchecked\";\r\n    else if (score < 60 && score > 30) stats = \"marginal\";\r\n    else if (score < 30 ) stats = \"plagiarized\";\r\n\r\n    const status = map.find(s => s.text === stats);\r\n  \r\n    if (!status) return (<div>No Status</div>);\r\n\r\n    return <Label color={status.color as any} text={status.text} />;\r\n  };\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n        id: 'passed',\r\n        name: 'Passed'\r\n    },\r\n    {\r\n      id: 'marginal',\r\n      name: 'Marginal'\r\n    },\r\n    {\r\n      id: 'plagiarized',\r\n      name: 'Plagiarized'\r\n    },\r\n    {\r\n      id: 'unchecked',\r\n      name: 'Not Checked'\r\n    }\r\n  ];\r\n\r\n  const applyPagination = (\r\n    submittedFiles: FileStorage[],\r\n    page: number,\r\n    limit: number\r\n  ): FileStorage[] => {\r\n    return submittedFiles.slice(page * limit, page * limit + limit);\r\n  };\r\n\r\n  type FileStorageProps = {\r\n    assignmentTitle: string;\r\n    classCode: string;\r\n    assignId: number;\r\n    submittedFiles: FileStorage[];\r\n  }\r\n\r\n  function FileStorageTable({ assignmentTitle, submittedFiles, classCode, assignId }: FileStorageProps) {\r\n    const navigate = useNavigate();\r\n    const [filteredFiles, setFilteredFiles] = useState<FileStorage[]>(submittedFiles);\r\n    const [paginatedFiles, setPaginatedFiles] = useState<FileStorage[]>([]);\r\n    const [page, setPage] = useState<number>(0);\r\n    const [limit, setLimit] = useState<number>(5);\r\n    const [selectedFiles, setSelectedFiles] = useState<number[]>([]);\r\n    const [filters, setFilters] = useState<Filters>(\"all\");\r\n\r\n    useEffect(() => {\r\n        setFilteredFiles(state => submittedFiles);\r\n    }, [submittedFiles]);\r\n\r\n    useEffect(() => {\r\n        setPaginatedFiles(applyPagination(\r\n            filteredFiles,\r\n            page,\r\n            limit\r\n        ));\r\n    }, [filteredFiles, page, limit])\r\n\r\n    const handleStatusChange = (e: SelectChangeEvent) => setFilters(e.target.value as Filters);\r\n    const handlePageChange = (event: any, newPage: number) => setPage(newPage);\r\n    const handleLimitChange = (event: ChangeEvent<HTMLInputElement>) => setLimit(parseInt(event.target.value));\r\n    const handleSelectOneFile = (\r\n        event: ChangeEvent<HTMLInputElement>,\r\n        fileId: number\r\n      ): void => {\r\n        if (!selectedFiles.includes(fileId)) {\r\n            setSelectedFiles((prevSelected) => [\r\n            ...prevSelected,\r\n            fileId\r\n          ]);\r\n        } else {\r\n            setSelectedFiles((prevSelected) =>\r\n            prevSelected.filter((id) => id !== fileId)\r\n          );\r\n        }\r\n      };\r\n\r\n    return (\r\n    <AnimatePresence>\r\n        <motion.div\r\n            key={assignmentTitle}\r\n            initial={{ opacity: 0, y: 80 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 80 }}\r\n            transition={{ duration: 0.5 }}\r\n        >\r\n        <Card sx={{ mt: 5 }}>\r\n            {selectedFiles.length > 0 && (\r\n                <Box flex={1} p={2}>\r\n                    <BulkActions />\r\n                </Box>\r\n            )}\r\n            {selectedFiles.length === 0 && (\r\n                <CardHeader\r\n                    action={\r\n                    <Stack direction=\"row\" spacing={2} width={250}>\r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel>Status</InputLabel>\r\n                        <Select\r\n                            value={filters}\r\n                            onChange={handleStatusChange}\r\n                            label=\"Status\"\r\n                            autoWidth\r\n                        >\r\n                            {statusOptions.map((statusOption) => (\r\n                            <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                                {statusOption.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        </FormControl>\r\n                        <Button sx={{ width: 150 }} variant=\"contained\" onClick={() => navigate(`/teacher/upload/${classCode}/${assignId}`)}>\r\n                            Upload\r\n                        </Button>\r\n                    </Stack>\r\n                    }\r\n                    title={assignmentTitle}\r\n                />\r\n            )}\r\n\r\n            <Divider />\r\n\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                            color=\"primary\"\r\n                            //checked={selectedAllCryptoOrders}\r\n                            //indeterminate={selectedSomeCryptoOrders}\r\n\r\n                            //onChange={handleSelectAllCryptoOrders}\r\n                            />\r\n                        </TableCell>\r\n                        <TableCell>UID</TableCell>\r\n                        <TableCell>Student</TableCell>\r\n                        <TableCell>File Name</TableCell>\r\n                        <TableCell>Date Submitted</TableCell>\r\n                        <TableCell align=\"right\">Originality</TableCell>\r\n                        <TableCell align=\"right\">Status</TableCell>\r\n                        <TableCell align=\"right\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {paginatedFiles.map(file => {\r\n                            const dateString = new Date(file.dateUploaded).toLocaleDateString(undefined, {\r\n                                weekday: 'short',\r\n                                month: 'long',\r\n                                day: 'numeric',\r\n                                year: 'numeric'\r\n                            });\r\n\r\n                            const timeString = new Date(file.dateUploaded).toLocaleTimeString('en-US');\r\n                            const isSelected = selectedFiles.includes(file.file_id);\r\n                            const originality = 100 - (100 * file.originalityScore);\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={file.file_id}\r\n                                    selected={isSelected}\r\n                                    >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            color=\"primary\"\r\n                                            checked={isSelected}\r\n                                            onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                                                handleSelectOneFile(event, file.file_id)\r\n                                            }\r\n                                            value={isSelected}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                        >\r\n                                            {file.fileUid.split(\"-\")[0]}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                        >\r\n                                            {file.assignmentList ? \r\n                                                file.assignmentList.student.studentAccount.firstName + \" \" + file.assignmentList.student.studentAccount.lastName : \r\n                                                \"Sample File\"\r\n                                            }\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                                            {file.assignmentList ? \r\n                                                file.assignmentList.student.studentAccount.email : \r\n                                                \"For testing purposes only.\"\r\n                                            }\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                        >\r\n                                            {file.fileName}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                                            application/pdf\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                        >\r\n                                            {dateString}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                                            {timeString}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                        >\r\n                                            {`${originality.toFixed(2)}%`}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        {getStatusLabel(originality)}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Tooltip title=\"Assess Document\" arrow>\r\n                                        <IconButton\r\n                                            sx={{\r\n                                            '&:hover': {\r\n                                                background: (theme) => theme.colors.primary.lighter\r\n                                            },\r\n                                            color: (theme) => theme.palette.primary.main\r\n                                            }}\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={() => navigate(`/teacher/assess/${file.fileUid}/${assignId}`)}\r\n                                        >\r\n                                            <InsertPageBreakTwoToneIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Download File\" arrow>\r\n                                        <IconButton\r\n                                            onClick={() => window.open(file.originalFileLink)}\r\n                                            sx={{\r\n                                            '&:hover': { background: (theme) => theme.colors.error.lighter },\r\n                                            color: (theme) => theme.palette.error.main\r\n                                            }}\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <DownloadTwoToneIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n\r\n                        {Boolean(paginatedFiles.length < limit && filteredFiles.length > 0) && (\r\n                            <TableRow sx={{ height: 60 * (limit - paginatedFiles.length) }} />\r\n                        )}\r\n\r\n                        {filteredFiles.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>\r\n                                    <Box sx={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                        flexDirection: \"column\",\r\n                                        width: '100%',\r\n                                        height: { xs: 200, sm: 280 },\r\n                                        m: 3\r\n                                    }}>\r\n                                        <img alt=\"assignment\" src=\"/images/covers/assignment.png\" style={{ objectFit: \"scale-down\", height: \"100%\" }} />\r\n                                        <Typography variant=\"h5\" align=\"center\">No submission yet.</Typography>\r\n                                    </Box>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Box p={2}>\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={filteredFiles.length}\r\n                    onPageChange={handlePageChange}\r\n                    onRowsPerPageChange={handleLimitChange}\r\n                    page={page}\r\n                    rowsPerPage={limit}\r\n                    rowsPerPageOptions={[5, 10, 25, 30]}\r\n                />\r\n            </Box>\r\n        </Card>\r\n        </motion.div>\r\n    </AnimatePresence>\r\n    )\r\n  }\r\n  \r\n  export default FileStorageTable;"],"names":["LabelWrapper","styled","theme","colors","alpha","black","spacing","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","white","secondary","success","warning","error","info","className","color","text","children","capitalCase","ButtonError","Button","contrastText","dark","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","display","alignItems","justifyContent","Typography","variant","sx","ml","startIcon","DeleteTwoTone","IconButton","onClick","ref","p","MoreVertTwoTone","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","component","ListItem","button","ListItemText","getStatusLabel","score","stats","status","find","s","statusOptions","id","name","assignmentTitle","submittedFiles","classCode","assignId","navigate","useNavigate","filteredFiles","setFilteredFiles","paginatedFiles","setPaginatedFiles","page","setPage","limit","setLimit","selectedFiles","setSelectedFiles","filters","setFilters","useEffect","state","slice","applyPagination","AnimatePresence","motion","initial","opacity","y","animate","exit","transition","duration","Card","mt","length","flex","CardHeader","action","Stack","direction","width","FormControl","fullWidth","InputLabel","Select","value","onChange","e","target","label","autoWidth","map","statusOption","MenuItem","title","Divider","TableContainer","minWidth","Table","TableHead","TableRow","TableCell","padding","Checkbox","align","TableBody","file","dateString","Date","dateUploaded","toLocaleDateString","undefined","weekday","month","day","year","timeString","toLocaleTimeString","isSelected","includes","file_id","originality","originalityScore","hover","selected","checked","event","fileId","prevSelected","filter","fontWeight","gutterBottom","noWrap","fileUid","split","assignmentList","student","studentAccount","firstName","lastName","email","fileName","toFixed","Tooltip","arrow","background","size","InsertPageBreakTwoTone","fontSize","window","originalFileLink","DownloadTwoTone","Boolean","height","colSpan","flexDirection","xs","sm","m","alt","src","style","objectFit","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions"],"sourceRoot":""}